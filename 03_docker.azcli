#1. 컨테이너 생성 및 실행
##Dockerfile 인스트럭션 재정의
docker container run -it alpine
docker run -it alpine uname -a

#2. 컨테이너에 원하는 이름 부여하기
docker container run -d --name helloworld  hello.docker/hello-world
docker ps

#3. 컨테이너 포그라운드 실행 (중지: ctrl + c)
docker container run --name firstnode firstnode-app:1.0

#4. 지정 포트로 컨테이너 백그라운드 실행.
docker container run -d -p 80:3000 guestbook-app
docker container run -d guestbook-app

#5. 실행 중인 도커 컨테이너의 ID만 표시
docker container ls -q

#6. 실행 중인 도커 컨테이너 필터링 후 표시
docker container ls --filter "name=guestbook-app"

#7. 종료된 컨테이너 목록
docker container ls -a
docker ps -a

#8. 컨테이너 종료
docker container stop f8b726d1bfad

#9. 컨테이너 재시작
docker container restart practical_ellis

#10. 컨테이너 파기
docker container rm 9c21d1b566d6 
docker container rm -f firstnode 

#컨테이너 로그 확인 
docker container logs -f 4e072f321135 

#11. 실행 중인 컨테이너에 명령 실행
docker container exec 9d9f94d001ad pwd
docker container exec -it 3fdc4764e5ed bash
mv header.ejs _header.ejs 

#12. 컨테이너에 파일 복사
docker container cp header.ejs 3fdc4764e5ed:/app/views/header.ejs

#13. 컨테이너 리소스 사용량 확인
docker container stats 4e072f321135 